{"version":3,"sources":["reducers/index.js","store.js","actions/index.js","containers/TopArtists.js","containers/SimilarArtists.js","containers/Favorites.js","containers/Artist.js","containers/SearchAutocomplete.js","component/App.js","index.js"],"names":["initialState","topArtists","artistInfo","resultOfSearching","favorites","reducers","state","arguments","length","undefined","action","type","Object","objectSpread","toConsumableArray","data","artist","similar","artistName","map","fav","i","name","similarArtists","res","results","artistmatches","concat","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","key","href","actions","dispatch","fetch","then","response","json","topartists","catch","errors","console","log","req","asyncGetMoreInfo","similarartists","asyncGetSimilar","val","asyncSearchArtist","theme","createMuiTheme","typography","useNextVariants","TopArtists","this","props","getTopArtists","_this$props","classes","getSimilar","addToFavorites","deleteFromFavorites","react_default","a","createElement","Fragment","core_styles","Typography_default","className","h","component","variant","root","item","id","image","values","isInFavorites","find","Card_default","xs","card","CardHeader_default","header","CardActions_default","disableActionSpacing","Link","links","to","toLowerCase","IconButton_default","icons","aria-label","onClick","Favorite_default","color","CardMedia_default","media","title","Component","connect","ACTIONS","withStyles","_card","display","flexWrap","justifyContent","marginTop","margin","defineProperty","breakpoints","down","width","up","height","paddingTop","textDecoration","marginRight","padding","Similar","List_default","ListItem_default","listItem","alignItems","ListItemAvatar_default","Avatar_default","alt","src","ListItemText_default","secondary","inline","maxWidth","backgroundColor","palette","background","paper","borderBottom","Favorites","avatar","subheader","listeners","SimilarArtists","red","textAlign","Artist","getInfo","match","params","prevProps","bio","content","substr","indexOf","gutterBottom","stats","flexGrow","overflow","spacing","unit","marginBottom","renderInputComponent","inputProps","_inputProps$inputRef","inputRef","ref","other","objectWithoutProperties","TextField_default","assign","fullWidth","InputProps","node","input","renderSuggestion","suggestion","_ref","query","isHighlighted","label","matches","parts","parse","MenuItem_default","selected","part","index","highlight","String","style","fontWeight","text","getSuggestionValue","IntegrationAutosuggest","single","popper","handleSuggestionsFetchRequested","_ref2","value","handleSuggestionsClearRequested","handleChange","event","_ref3","newValue","_this","onChange","setState","suggestions","history","clearArtist","autosuggestProps","onSuggestionsFetchRequested","onSuggestionsClearRequested","onSuggestionSelected","e","_ref4","suggestionValue","push","dist_default","placeholder","container","suggestionsContainerOpen","suggestionsList","renderSuggestionsContainer","options","Paper_default","containerProps","square","children","React","TheSupperAS","position","overflowY","zIndex","left","right","listStyleType","divider","withRouter","SearchAutocomplete","_this$props2","searchArtist","BrowserRouter","Grid_default","Home_default","containers_SearchAutocomplete","Route","exact","path","target","document","querySelector","render","es","store","createStore","reducer","applyMiddleware","thunk","App"],"mappings":"8NAAMA,EAAe,CACjBC,WAAY,GACZC,WAAY,GACZC,kBAAmB,GACnBC,UAAW,IAEAC,EAAA,WAAkC,IAAjCC,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBP,EAAcU,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC7C,OAAQC,EAAOC,MACX,IAAK,kBACD,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAN,EADP,CAEIL,WAAWW,OAAAE,EAAA,EAAAF,CAAKF,EAAOK,QAG/B,IAAK,WACD,OAAOH,OAAAC,EAAA,EAAAD,CAAA,GACAN,EADP,CAEIJ,WAAY,CAACQ,EAAOK,KAAKC,UAGjC,IAAK,cACD,IAAMC,EAAUP,EAAOK,KAAKC,OACtBE,EAAaR,EAAOK,KAAK,SAASC,OACxC,OAAOJ,OAAAC,EAAA,EAAAD,CAAA,GACAN,EADP,CAEIF,UAAUQ,OAAAE,EAAA,EAAAF,CAAKN,EAAMF,UAAUe,IAAI,SAACC,EAAKC,GAIrC,OAHGD,EAAIE,OAASJ,IACZE,EAAIG,eAAiBN,GAElBG,OAInB,IAAK,gBACD,OAAOR,OAAAC,EAAA,EAAAD,CAAA,GACAN,EADP,CAEIH,kBAAoBO,EAAOc,IAAIC,SAAWf,EAAOc,IAAIC,QAAQC,cAAcV,QAAW,KAI9F,IAAK,mBACD,IAAMA,EAASN,EAAOM,OACtB,OAAOJ,OAAAC,EAAA,EAAAD,CAAA,GACAN,EADP,CAEIF,UAAS,GAAAuB,OAAAf,OAAAE,EAAA,EAAAF,CAAMN,EAAMF,WAAZQ,OAAAE,EAAA,EAAAF,CAA0BN,EAAML,WAAW2B,OAAO,SAAAP,GAAC,OAAIL,IAAWK,EAAEC,WAGrF,IAAK,wBACD,IAAMA,EAAOZ,EAAOY,KACpB,OAAOV,OAAAC,EAAA,EAAAD,CAAA,GACAN,EADP,CAEIF,UAAUQ,OAAAE,EAAA,EAAAF,CAAKN,EAAMF,UAAUwB,OAAO,SAAAP,GAAC,OAAIC,IAASD,EAAEC,UAI9D,QACI,OAAOhB,ICpDbuB,EAAmBC,OAAOC,8JCJ1BC,EAAM,mCACNC,EAAO,gCA0FEC,EAxFO,kBAAM,SAAAC,GAgBxBA,EAZW,SAAAA,GACHC,MAAK,GAAAT,OAAIM,EAAJ,2CAAAN,OAHO,UAGP,WAAAA,OAFK,MAEL,aAAAA,OAAoFK,EAApF,iBACJK,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAb,GACF,IAAMT,EAAOS,EAAIgB,WAAWxB,OAC5BmB,EAAS,CAAExB,KAAM,kBAAmBI,WAEvC0B,MAAM,SAAAC,GACHC,QAAQC,IAAIF,SA4EbR,EArEC,SAAClB,GAAD,OAAY,SAAAmB,GAexBA,EAdyB,WACrB,IAAMb,EAAON,EACb,OAAO,SAAAmB,GACHC,MAAK,GAAAT,OAAIM,EAAJ,uCAAAN,OAA8CL,EAA9C,aAAAK,OAA8DK,EAA9D,iBACJK,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAQ,GAEFV,EAAS,CAAExB,KAAM,WAAYI,KADhB8B,MAGhBJ,MAAM,SAAAC,GACHC,QAAQC,IAAIF,MAIfI,MAsDEZ,EA9BI,SAAClB,GAAD,OAAY,SAAAmB,GAiB3BA,EAhBwB,WACxB,IAAMb,EAAON,EAEb,OAAO,SAAAmB,GACHC,MAAK,GAAAT,OAAIM,EAAJ,0CAAAN,OAAiDL,EAAjD,WAAAK,OAFK,EAEL,aAAAA,OAAgFK,EAAhF,iBACAK,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAb,GACF,IAAMT,EAAOS,EAAIuB,eACjBZ,EAAS,CAAExB,KAAM,cAAeI,WAGnC0B,MAAM,SAAAC,GACHC,QAAQC,IAAIF,MAIfM,MAaEd,EAnDM,SAACe,GAAD,OAAS,SAAAd,GAc5BA,EAb4B,WACtB,IAAMb,EAAO2B,EACb,OAAO,SAAAd,GACPC,MAAK,GAAAT,OAAIM,EAAJ,sCAAAN,OAA6CL,EAA7C,aAAAK,OAA6DK,EAA7D,iBACJK,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAb,GACFW,EAAS,CAAExB,KAAM,gBAAiBa,MAAKyB,UAE1CR,MAAM,SAAAC,GACHC,QAAQC,IAAIF,MAIbQ,MAqCIhB,EAVQ,SAAAlB,GAAM,MAAK,CAC9BL,KAAM,mBACNK,WAQWkB,EAlCK,kBAAM,SAAAC,GACtBA,EAAS,CAAExB,KAAM,gBAAiBa,IAAK,CAACC,QAAS,CAACC,cAAe,CAACV,OAAQ,MAAOiC,IAAK,OAiC3Ef,EALa,SAAAZ,GAAI,MAAK,CACjCX,KAAM,wBACNW,gHCjCE6B,SAAQC,yBAAe,CAC3BC,WAAY,CACRC,iBAAiB,MAIjBC,8LAEEC,KAAKC,MAAMC,iDAEL,IAAAC,EACsFH,KAAKC,MAAzFG,EADFD,EACEC,QAAS3D,EADX0D,EACW1D,WAAY4D,EADvBF,EACuBE,WAAYC,EADnCH,EACmCG,eAAgBC,EADnDJ,EACmDI,oBAAqB3D,EADxEuD,EACwEvD,UAC9E,OACI4D,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACIH,EAAAC,EAAAC,cAACE,EAAA,iBAAD,CAAkBjB,MAAOA,GACrBa,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CAAaK,UAAWV,EAAQW,EAAGC,UAAU,KAAKC,QAAQ,MAA1D,4CAIJT,EAAAC,EAAAC,cAAA,OAAKI,UAAWV,EAAQc,MACnBzE,EAAWkB,IAAI,SAACwD,EAAMC,GACnB,IAAMvD,EAAIsD,EAAKE,MAAM,GACf5B,EAAMrC,OAAOkE,OAAOzD,GAAG,GACvB0D,EAAgB3E,EAAU4E,KAAK,SAAA3D,GAAC,OAAIA,EAAEC,OAASqD,EAAKrD,OAC1D,OACI0C,EAAAC,EAAAC,cAACe,EAAAhB,EAAD,CAAMjC,IAAK4C,EAAIM,GAAI,EAAGZ,UAAWV,EAAQuB,MACrCnB,EAAAC,EAAAC,cAACkB,EAAAnB,EAAD,CACIK,UAAWV,EAAQyB,OACnB3E,OACIsD,EAAAC,EAAAC,cAACoB,EAAArB,EAAD,CAAaK,UAAWV,EAAQ1B,QAASqD,sBAAoB,GACzDvB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMlB,UAAWV,EAAQ6B,MAAOC,GAAE,WAAA/D,OAAagD,EAAKrD,KAAKqE,gBAAkBhB,EAAKrD,MAC3EyD,EAEOf,EAAAC,EAAAC,cAAC0B,EAAA3B,EAAD,CAAYK,UAAWV,EAAQiC,MAAOC,aAAW,wBACrCC,QAAS,kBAAMhC,EAAoBY,EAAKrD,QAChD0C,EAAAC,EAAAC,cAAC8B,EAAA/B,EAAD,CAAWgC,MAAM,WAGvBjC,EAAAC,EAAAC,cAAC0B,EAAA3B,EAAD,CAAYK,UAAWV,EAAQiC,MAAOC,aAAW,qBACrCC,QAAS,WACLjC,EAAea,EAAKrD,MACpBuC,EAAWc,EAAKrD,QAE5B0C,EAAAC,EAAAC,cAAC8B,EAAA/B,EAAD,CAAUgC,MAAM,iBAM1CjC,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAME,GAAE,WAAA/D,OAAagD,EAAKrD,KAAKqE,gBAC3B3B,EAAAC,EAAAC,cAACgC,EAAAjC,EAAD,CACEK,UAAWV,EAAQuC,MACnBtB,MAAO5B,EACPmD,MAAOzB,EAAKrD,oBA/CzB+E,aAyEVC,cAdS,SAAAhG,GACpB,MAAO,CACHL,WAAYK,EAAML,WAClBG,UAAWE,EAAMF,YAIE,SAAA+B,GAAQ,MAAK,CACpCuB,cAAe,kBAAMvB,EAASoE,MAC9BzC,eAAgB,SAACc,GAAD,OAAQzC,EAASoE,EAAuB3B,KACxDb,oBAAqB,SAAAzC,GAAI,OAAIa,EAASoE,EAA4BjF,KAClEuC,WAAY,SAAAvC,GAAI,OAAIa,EAASoE,EAAmBjF,OAGrCgF,CAA6CE,qBAvH7C,SAAArD,GAAK,IAAAsD,EAAA,MAAK,CACrB/B,KAAM,CACFgC,QAAS,OACTC,SAAU,OACVC,eAAgB,QAChBC,UAAW,IAEf1B,MAAIsB,EAAA,CACAK,OAAQ,YADRlG,OAAAmG,EAAA,EAAAnG,CAAA6F,EAECtD,EAAM6D,YAAYC,KAAK,MAAQ,CAC5BC,MAAO,qBAHXtG,OAAAmG,EAAA,EAAAnG,CAAA6F,EAKCtD,EAAM6D,YAAYG,GAAG,MAAQ,CAC1BD,MAAO,uBANXtG,OAAAmG,EAAA,EAAAnG,CAAA6F,EAQCtD,EAAM6D,YAAYG,GAAG,MAAQ,CAC1BD,MAAO,mBACPJ,OAAQ,cAVZL,GAaJN,MAAO,CACHiB,OAAQ,EACRC,WAAY,UAEhBnF,QAAS,CACLwE,QAAS,QAEbjB,MAAO,CACHQ,MAAO,OACPqB,eAAgB,OAChBC,YAAa,GAEjBlC,OAAQ,CACJmC,QAAS,GAEbjD,EAAG,CACC0B,MAAO,UAmF6CO,CAAmBjD,0GCtGzEkE,oLACQ,IAAA9D,EACmFH,KAAKC,MAAtFG,EADFD,EACEC,QAAS3C,EADX0C,EACW1C,QAAS4C,EADpBF,EACoBE,WAAYC,EADhCH,EACgCG,eAAqC1D,GADrEuD,EACgDI,oBADhDJ,EACqEvD,WAC3E,OACI4D,EAAAC,EAAAC,cAACwD,GAAAzD,EAAD,CAAMK,UAAWV,EAAQc,MACpBzD,EAAQE,IAAI,SAACwD,EAAMC,GAChB,IAAMvD,EAAIsD,EAAKE,MAAM,GACf5B,EAAMrC,OAAOkE,OAAOzD,GAAG,GACPjB,EAAU4E,KAAK,SAAA3D,GAAC,OAAIA,EAAEC,OAASqD,EAAKrD,OAC1D,OACI0C,EAAAC,EAAAC,cAACyD,GAAA1D,EAAD,CAAUK,UAAWV,EAAQgE,SAAU5F,IAAK4C,EAAIiD,WAAW,cACvD7D,EAAAC,EAAAC,cAAC4D,GAAA7D,EAAD,KACID,EAAAC,EAAAC,cAAC6D,GAAA9D,EAAD,CAAQ+D,IAAKrD,EAAKrD,KAAM2G,IAAKhF,KAEjCe,EAAAC,EAAAC,cAACgE,GAAAjE,EAAD,CACIkE,UACInE,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMlB,UAAWV,EAAQwE,OAAQ1C,GAAE,WAAA/D,OAAagD,EAAKrD,KAAKqE,gBACtD3B,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CAAYO,UAAU,OAAOF,UAAWV,EAAQwE,OAAQnC,MAAM,eACzDtB,EAAKrD,SAYd0C,EAAAC,EAAAC,cAAC0B,EAAA3B,EAAD,CAAYK,UAAWV,EAAQiC,MAAOC,aAAW,qBACrCC,QAAS,WACLjC,EAAea,EAAKrD,MACpBuC,EAAWc,EAAKrD,QAC5B0C,EAAAC,EAAAC,cAAC8B,EAAA/B,EAAD,CAAUgC,MAAM,yBAlClCI,aAyDPC,eAZS,SAAAhG,GACpB,MAAO,CACHF,UAAWE,EAAMF,YAIE,SAAA+B,GAAQ,MAAK,CACpC2B,eAAgB,SAACc,GAAD,OAAQzC,EAASoE,EAAuB3B,KACxDb,oBAAqB,SAACzC,GAAD,OAAUa,EAASoE,EAA4BjF,KACpEuC,WAAY,SAAAvC,GAAI,OAAIa,EAASoE,EAAmBjF,OAGrCgF,CAA6CE,qBA1E7C,SAAArD,GAAK,MAAK,CACrBuB,KAAM,CACFwC,MAAO,OACPmB,SAAU,IACVC,gBAAiBnF,EAAMoF,QAAQC,WAAWC,OAE9CL,OAAQ,CACJ1B,QAAS,SACTY,eAAgB,QAEpBM,SAAU,CACNlB,QAAS,OACTmB,WAAY,SACZa,aAAc,uBA6DsClC,CAAmBiB,yBCnCzEtE,GAAQC,yBAAe,CAC3BC,WAAY,CACRC,iBAAiB,KAIjBqF,oLACQ,IAAAhF,EAC8CH,KAAKC,MAAjDG,EADFD,EACEC,QAASxD,EADXuD,EACWvD,UAAW2D,EADtBJ,EACsBI,oBAC5B,OACIC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACK/D,EAAUI,OAAS,EAEhBwD,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACIH,EAAAC,EAAAC,cAACE,EAAA,iBAAD,CAAkBjB,MAAOA,IACrBa,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CAAYK,UAAWV,EAAQW,EAAGC,UAAU,KAAKC,QAAQ,MAAzD,2BAIJT,EAAAC,EAAAC,cAAA,OAAKI,UAAWV,EAAQc,MACnBtE,EAAUe,IAAI,SAACwD,EAAMC,GAClB,IAAMvD,EAAIsD,EAAKE,MAAM,GACf5B,EAAMrC,OAAOkE,OAAOzD,GAAG,GAC7B,OACI2C,EAAAC,EAAAC,cAACe,EAAAhB,EAAD,CAAMjC,IAAK4C,EAAIN,UAAWV,EAAQuB,MAC9BnB,EAAAC,EAAAC,cAACkB,EAAAnB,EAAD,CACI2E,OACI5E,EAAAC,EAAAC,cAAC6D,GAAA9D,EAAD,CAAQ6B,aAAW,SAASxB,UAAWV,EAAQgF,QAC1CjE,EAAKrD,KAAK,IAGnBZ,OACIsD,EAAAC,EAAAC,cAAC0B,EAAA3B,EAAD,CAAY6B,aAAW,wBACXC,QAAS,kBAAMhC,EAAoBY,EAAKrD,QAChD0C,EAAAC,EAAAC,cAAC8B,EAAA/B,EAAD,CAAUgC,MAAM,WAGxBG,MAAOzB,EAAKrD,KACZuH,UAAS,cAAAlH,OAAgBgD,EAAKmE,aAElC9E,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAME,GAAE,WAAA/D,OAAagD,EAAKrD,KAAKqE,gBAC3B3B,EAAAC,EAAAC,cAACgC,EAAAjC,EAAD,CACIK,UAAWV,EAAQuC,MACnBtB,MAAO5B,EACPmD,MAAOzB,EAAKrD,QAGpB0C,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CAAYK,UAAWV,EAAQW,EAAGE,QAAQ,aAA1C,mBAGAT,EAAAC,EAAAC,cAAC6E,GAAD,CAAS9H,QAAS0D,EAAKpD,sBAM3CyC,EAAAC,EAAAC,cAACE,EAAA,iBAAD,CAAkBjB,MAAOA,IACrBa,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CAAYK,UAAWV,EAAQW,EAAGC,UAAU,KAAKC,QAAQ,MAAzD,6BAnDA4B,aAwETC,eAXS,SAAAhG,GACpB,MAAO,CACHF,UAAWE,EAAMF,YAIE,SAAA+B,GAAQ,MAAK,CACpC2B,eAAgB,SAACc,GAAD,OAAQzC,EAASoE,EAAuB3B,KACxDb,oBAAqB,SAACzC,GAAD,OAAUa,EAASoE,EAA4BjF,OAGzDgF,CAA6CE,qBAnH7C,SAAArD,GAAK,IAAAsD,EAAA,MAAK,CACrB/B,KAAM,CACFgC,QAAS,OACTC,SAAU,OACVC,eAAgB,QAChBC,UAAW,IAEf1B,MAAIsB,EAAA,CACAK,OAAQ,YADRlG,OAAAmG,EAAA,EAAAnG,CAAA6F,EAECtD,EAAM6D,YAAYC,KAAK,MAAQ,CAC5BC,MAAO,qBAHXtG,OAAAmG,EAAA,EAAAnG,CAAA6F,EAKCtD,EAAM6D,YAAYG,GAAG,MAAQ,CAC1BD,MAAO,uBANXtG,OAAAmG,EAAA,EAAAnG,CAAA6F,EAQCtD,EAAM6D,YAAYG,GAAG,MAAQ,CAC1BD,MAAO,mBACPJ,OAAQ,cAVZL,GAaJN,MAAO,CACHiB,OAAQ,EACRC,WAAY,UAEhBnF,QAAS,CACLwE,QAAS,QAEbkC,OAAQ,CACJN,gBAAiBU,KAAI,MAEzBzE,EAAG,CACC0B,MAAO,OACPa,OAAQ,GACRmC,UAAW,YAkFyCzC,CAAmBmC,KCrGzExF,GAAQC,yBAAe,CAC3BC,WAAY,CACRC,iBAAiB,KAIjB4F,+LAEA1F,KAAKC,MAAM0F,QAAQ3F,KAAKC,MAAM2F,MAAMC,OAAOrI,mDAE5BsI,GACX9F,KAAKC,MAAM2F,MAAMC,OAAOrI,SAAWsI,EAAUF,MAAMC,OAAOrI,QAC5DwC,KAAKC,MAAM0F,QAAQ3F,KAAKC,MAAM2F,MAAMC,OAAOrI,yCAGvC,IAEA+D,EAAewE,EAFf5F,EAC4EH,KAAKC,MAA7EvD,EADJyD,EACIzD,WAAY0D,EADhBD,EACgBC,QAASxD,EADzBuD,EACyBvD,UAAW2D,EADpCJ,EACoCI,oBAAqBD,EADzDH,EACyDG,eAM7D,YAJqBrD,IAAlBP,EAAW,KACV6E,EAAgB3E,EAAU4E,KAAK,SAAA3D,GAAC,OAAIA,EAAEC,MAAQpB,EAAW,GAAGoB,OAC5DiI,EAAMrJ,EAAW,GAAGqJ,IAAIC,QAAQC,OAAO,EAAGvJ,EAAW,GAAGqJ,IAAIC,QAAQE,QAAQ,QAG5E1F,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,UACuB1D,IAAlBP,EAAW,IACR8D,EAAAC,EAAAC,cAAA,OAAKI,UAAWV,EAAQc,MACpBV,EAAAC,EAAAC,cAACE,EAAA,iBAAD,CAAkBjB,MAAOA,IACrBa,EAAAC,EAAAC,cAAA,OAAKI,UAAWV,EAAQyB,QACpBrB,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CAAYK,UAAWV,EAAQW,EAAGC,UAAU,KAAKC,QAAQ,MACpDvE,EAAW,GAAGoB,MAElByD,EAEOf,EAAAC,EAAAC,cAAC0B,EAAA3B,EAAD,CAAYK,UAAWV,EAAQiC,MAAOC,aAAW,wBACrCC,QAAS,kBAAMhC,EAAoB7D,EAAW,GAAGoB,QACzD0C,EAAAC,EAAAC,cAAC8B,EAAA/B,EAAD,CAAUgC,MAAM,WAGpBjC,EAAAC,EAAAC,cAAC0B,EAAA3B,EAAD,CAAYK,UAAWV,EAAQiC,MAAOC,aAAW,qBACrCC,QAAS,kBAAMjC,EAAe5D,EAAW,GAAGoB,QACpD0C,EAAAC,EAAAC,cAAC8B,EAAA/B,EAAD,CAAUgC,MAAM,gBAKpCjC,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CAAYK,UAAWV,EAAQW,EAAGE,QAAQ,YAAYkF,cAAY,GAAlE,cAAAhI,OACmBzB,EAAW,GAAG0J,MAAMd,YAEvC9E,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CAAYQ,QAAQ,QAAQkF,cAAY,GACnCJ,YA3CRlD,aAiENC,eAbS,SAAAhG,GACpB,MAAO,CACHJ,WAAYI,EAAMJ,WAClBE,UAAWE,EAAMF,YAIE,SAAA+B,GAAQ,MAAK,CACpCgH,QAAS,SAACnI,GAAD,OAAYmB,EAASoE,EAAgBvF,KAC9C8C,eAAgB,SAACxC,GAAD,OAAUa,EAASoE,EAAuBjF,KAC1DyC,oBAAqB,SAACzC,GAAD,OAAUa,EAASoE,EAA4BjF,OAGzDgF,CAA6CE,qBA5F7C,SAAArD,GAAK,MAAK,CACrBuB,KAAM,CACFmF,SAAU,EACVC,SAAU,UAEdrB,MAAO,CACHJ,SAAU,IACVvB,OAAM,GAAAnF,OAAKwB,EAAM4G,QAAQC,KAAnB,WACNxC,QAA8B,EAArBrE,EAAM4G,QAAQC,MAE3BzF,EAAG,CACC0B,MAAO,OACPgE,aAAc,IAElB5E,OAAQ,CACJqB,QAAS,OACTE,eAAgB,gBAChBiB,WAAY,cA2EwCrB,CAAmB0C,sJC1F/E,SAASgB,GAAqBC,GAAY,IAC9BvG,EAAgDuG,EAAhDvG,QAD8BwG,EACkBD,EAAvCE,gBADqB,IAAAD,EACV,aADUA,EACAE,EAAkBH,EAAlBG,IAAQC,EADR3J,OAAA4J,GAAA,EAAA5J,CACkBuJ,EADlB,8BAEtC,OACInG,EAAAC,EAAAC,cAACuG,GAAAxG,EAADrD,OAAA8J,OAAA,CACIC,WAAS,EACTC,WAAY,CACRP,SAAU,SAAAQ,GACVP,EAAIO,GACJR,EAASQ,IAETjH,QAAS,CACLkH,MAAOlH,EAAQkH,SAGnBP,IAKhB,IAAMQ,GAAmB,SAACC,EAADC,GAA0C,IAA3BC,EAA2BD,EAA3BC,MAAOC,EAAoBF,EAApBE,cAC3CH,EAAWI,MAAQJ,EAAW1J,KAC9B,IAAM+J,EAAUjC,KAAM4B,EAAWI,MAAOF,GAClCI,EAAQC,KAAMP,EAAWI,MAAOC,GAEtC,OAAQrH,EAAAC,EAAAC,cAACsH,GAAAvH,EAAD,CAAUwH,SAAUN,EAAe3G,UAAU,OAC1C8G,EAAMnK,IAAI,SAACuK,EAAMC,GAAP,OACAD,EAAKE,UACD5H,EAAAC,EAAAC,cAAA,QAAMlC,IAAK6J,OAAOF,GAAQG,MAAO,CAAEC,WAAY,MAC1CL,EAAKM,MAGVhI,EAAAC,EAAAC,cAAA,UAAQlC,IAAK6J,OAAOF,GAAQG,MAAO,CAAEC,WAAY,MAC5CL,EAAKM,UAOvC,SAASC,GAAmBjB,GACxB,OAAOA,EAAWI,MAGtB,IAgCMc,8MACF5L,MAAQ,CACJ6L,OAAQ,GACRC,OAAQ,MAEZC,gCAAkC,SAAAC,GAAeA,EAAZC,SACrCC,gCAAkC,eAClCC,aAAe,SAAAnL,GAAI,OAAI,SAACoL,EAADC,GAAyB,IAAfC,EAAeD,EAAfC,SACd,WAAfF,EAAM/L,MACNkM,EAAKpJ,MAAMqJ,SAASF,GAExBC,EAAKE,SAALnM,OAAAmG,EAAA,EAAAnG,CAAA,GACKU,EAAOsL,8EAGL,IAAAjJ,EACoDH,KAAKC,MAApDG,EADLD,EACKC,QAASoJ,EADdrJ,EACcqJ,YAAaC,EAD3BtJ,EAC2BsJ,QAASC,EADpCvJ,EACoCuJ,YACjCC,EAAmB,CACrBjD,wBACA8C,YAAaA,EACbI,4BAA6B5J,KAAK6I,gCAClCgB,4BAA6B7J,KAAKgJ,gCAClCP,sBACAlB,oBACAuC,qBAAuB,SAACC,EAADC,GAA0B,IAArBC,EAAqBD,EAArBC,gBACxBR,EAAQS,KAAK,WAAaD,GAC1BP,MAGR,OACIlJ,EAAAC,EAAAC,cAAA,OAAKI,UAAWV,EAAQc,MACpBV,EAAAC,EAAAC,cAACyJ,GAAA1J,EAADrD,OAAA8J,OAAA,GACIyC,EADJ,CAEAhD,WAAY,CACRvG,UACAgK,YAAa,mBACbrB,MAAO/I,KAAKlD,MAAM6L,OAClBW,SAAUtJ,KAAKiJ,aAAa,WAEhCtJ,MAAO,CACH0K,UAAWjK,EAAQiK,UACnBC,yBAA0BlK,EAAQkK,yBAClCC,gBAAiBnK,EAAQmK,gBACzB/C,WAAYpH,EAAQoH,YAExBgD,2BAA4B,SAAAC,GAAO,OACnCjK,EAAAC,EAAAC,cAACgK,GAAAjK,EAADrD,OAAA8J,OAAA,GAAWuD,EAAQE,eAAnB,CAAmCC,QAAM,IACpCH,EAAQI,sBA/CQC,IAAMjI,WAwDrCkI,GAAe/H,qBAxFN,SAAArD,GAAK,MAAK,CACrBuB,KAAM,CACF0C,OAAQ,GACRF,MAAO,MACP2C,SAAU,EACV2E,SAAU,YAEdX,UAAW,CACPW,SAAU,YAEdV,yBAA0B,CACtBU,SAAU,WACVpH,OAAQ,IACRqH,UAAW,SACXC,OAAQ,EACR7H,UAAW1D,EAAM4G,QAAQC,KACzB2E,KAAM,EACNC,MAAO,GAEX5D,WAAY,CACRtE,QAAS,SAEbqH,gBAAiB,CACbjH,OAAQ,EACRU,QAAS,EACTqH,cAAe,QAEnBC,QAAS,CACL1H,OAA6B,EAArBjE,EAAM4G,QAAQC,QA4DTxD,CAAmBuI,aAAW7C,KAE7C8C,oLACQ,IAAAC,EACmDzL,KAAKC,MAAtDtD,EADF8O,EACE9O,kBAAmB+O,EADrBD,EACqBC,aAAchC,EADnC+B,EACmC/B,YACzC,OACIlJ,EAAAC,EAAAC,cAACqK,GAAD,CACIzB,SAAU,SAACxL,GAAD,OAAU4N,EAAa5N,IACjC0L,YAAa7M,EACb+M,YAAaA,WAPI7G,aAwBlBC,eAXS,SAAAhG,GACpB,MAAO,CACHH,kBAAmBG,EAAMH,oBAIN,SAAAgC,GAAQ,MAAK,CACpC+M,aAAc,SAAClO,GAAD,OAAYmB,EAASoE,EAAqBvF,KACxDkM,YAAa,kBAAM/K,EAASoE,QAGjBD,CAA6C0I,ICrH7CxI,wBAzCA,SAAArD,GAAK,MAAK,CACrBuB,KAAM,CACFoF,SAAU,SACVG,aAAc,IAElBxB,MAAO,CACHQ,UAAW,SACXhD,MAAO9C,EAAMoF,QAAQyD,KAAK7D,aAkCnB3B,CA9BH,SAAC/C,GAAU,IACXG,EAAYH,EAAZG,QACJ,OACAI,EAAAC,EAAAC,cAACiL,EAAA,EAAD,KACInL,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKI,UAAWV,EAAQc,MACpBV,EAAAC,EAAAC,cAACkL,EAAAnL,EAAD,CAAM4J,WAAS,EAAC9D,QAAS,IACrB/F,EAAAC,EAAAC,cAACkL,EAAAnL,EAAD,CAAMU,MAAI,EAACO,GAAI,GACXlB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAME,GAAG,KACL1B,EAAAC,EAAAC,cAACmL,EAAApL,EAAD,CAAMgC,MAAM,cAGpBjC,EAAAC,EAAAC,cAACkL,EAAAnL,EAAD,CAAMU,MAAI,EAACO,GAAI,GACXlB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAME,GAAG,kBACL1B,EAAAC,EAAAC,cAAC8B,EAAA/B,EAAD,CAAUgC,MAAM,YAGxBjC,EAAAC,EAAAC,cAACkL,EAAAnL,EAAD,CAAMU,MAAI,EAACO,GAAI,GACXlB,EAAAC,EAAAC,cAACoL,GAAD,SAIZtL,EAAAC,EAAAC,cAACqL,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIjL,UAAWjB,IACjCS,EAAAC,EAAAC,cAACqL,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,iBAAiBjL,UAAWmE,KAC9C3E,EAAAC,EAAAC,cAACqL,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,kBAAkBjL,UAAW0E,SCvCzDwG,GAASC,SAASC,cAAc,SAEtCC,iBACI7L,EAAAC,EAAAC,cAAC4L,EAAA,EAAD,CAAUC,MRJC,WACX,OAD2CxP,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GACpCyP,YACHC,EACApO,EAAiBqO,YAAgBC,OQCpBJ,IACb/L,EAAAC,EAAAC,cAACiL,EAAA,EAAD,KACInL,EAAAC,EAAAC,cAACqL,EAAA,EAAD,CAAOE,KAAK,IAAIjL,UAAW4L,OAGnCV","file":"static/js/main.ade63dbd.chunk.js","sourcesContent":["const initialState = {\r\n    topArtists: [],\r\n    artistInfo: [],\r\n    resultOfSearching: [],\r\n    favorites: [],\r\n}\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'GET_TOP_ARTISTS':\r\n            return {\r\n                ...state,\r\n                topArtists: [...action.data]\r\n            }\r\n\r\n        case 'GET_INFO':\r\n            return {\r\n                ...state,\r\n                artistInfo: [action.data.artist]\r\n            }\r\n\r\n        case 'GET_SIMILAR':\r\n            const similar = action.data.artist;\r\n            const artistName = action.data['@attr'].artist;\r\n            return {\r\n                ...state,\r\n                favorites: [...state.favorites.map((fav, i) => {\r\n                    if(fav.name === artistName) {\r\n                        fav.similarArtists = similar;\r\n                    }\r\n                    return fav;\r\n                })]\r\n            }\r\n\r\n        case 'SEARCH_ARTIST':\r\n            return {\r\n                ...state,\r\n                resultOfSearching: (action.res.results && action.res.results.artistmatches.artist) || []\r\n            }\r\n\r\n\r\n        case 'ADD_TO_FAVORITES':\r\n            const artist = action.artist;\r\n            return {\r\n                ...state,\r\n                favorites: [...state.favorites, ...state.topArtists.filter(i => artist === i.name)]\r\n            }\r\n\r\n        case 'DELETE_FROM_FAVORITES':\r\n            const name = action.name;\r\n            return {\r\n                ...state,\r\n                favorites: [...state.favorites.filter(i => name !== i.name)]\r\n            }\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport reducer from '../src/reducers/index'\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n\r\nexport default function store(initialState={}) {\r\n    return createStore(\r\n        reducer,\r\n        composeEnhancers(applyMiddleware(thunk))\r\n    )\r\n}\r\n","const key = '4404d2f5ff44af76585b0d45e25f087d';\r\nconst href = 'https://ws.audioscrobbler.com';\r\n\r\nconst getTopArtists = () => dispatch => {\r\n    const asyncGetTopArtists = () => {\r\n        const country = 'ukraine';\r\n        const limit = '100';\r\n        return dispatch => {\r\n            fetch(`${href}/2.0/?method=geo.gettopartists&country=${country}&limit=${limit}&api_key=${key}&format=json`)\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                const data = res.topartists.artist;\r\n                dispatch({ type: 'GET_TOP_ARTISTS', data })\r\n            })\r\n            .catch(errors => {\r\n                console.log(errors)\r\n            })\r\n        }\r\n    };\r\n    dispatch(asyncGetTopArtists())\r\n};\r\n\r\nconst getInfo = (artist) => dispatch => {\r\n    const asyncGetMoreInfo = () => {\r\n        const name = artist;\r\n        return dispatch => {\r\n            fetch(`${href}/2.0/?method=artist.getinfo&artist=${name}&api_key=${key}&format=json`)\r\n            .then(response => response.json())\r\n            .then(req => {\r\n                const data = req;\r\n                dispatch({ type: 'GET_INFO', data })\r\n            })\r\n            .catch(errors => {\r\n                console.log(errors)\r\n            })\r\n        }\r\n    };\r\n    dispatch(asyncGetMoreInfo())\r\n};\r\n\r\nconst searchArtist = (val) => dispatch => {\r\n    const asyncSearchArtist = () => {\r\n        const name = val;\r\n        return dispatch => {\r\n        fetch(`${href}/2.0/?method=artist.search&artist=${name}&api_key=${key}&format=json`)\r\n        .then(response => response.json())\r\n        .then(res => {\r\n            dispatch({ type: 'SEARCH_ARTIST', res, val })\r\n        })\r\n        .catch(errors => {\r\n            console.log(errors)\r\n        })\r\n    }\r\n  };\r\n  dispatch(asyncSearchArtist())\r\n};\r\n\r\nconst clearArtist = () => dispatch => {\r\n    dispatch({ type: 'SEARCH_ARTIST', res: {results: {artistmatches: {artist: []}}}, val: '' });\r\n};\r\n\r\nconst getSimilar = (artist) => dispatch => {\r\n    const asyncGetSimilar = () => {\r\n    const name = artist;\r\n    const limit = 5;\r\n    return dispatch => {\r\n        fetch(`${href}/2.0/?method=artist.getsimilar&artist=${name}&limit=${limit}&api_key=${key}&format=json`)\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                const data = res.similarartists;\r\n                dispatch({ type: 'GET_SIMILAR', data })\r\n            \r\n            })\r\n            .catch(errors => {\r\n                console.log(errors)\r\n            })\r\n        }\r\n    };\r\n    dispatch(asyncGetSimilar())\r\n};\r\n\r\nconst addToFavorites = artist => ({\r\n    type: 'ADD_TO_FAVORITES',\r\n    artist\r\n});\r\n\r\nconst deleteFromFavorites = name => ({\r\n    type: 'DELETE_FROM_FAVORITES',\r\n    name\r\n});\r\n\r\nexport default {\r\n    getTopArtists,\r\n    getInfo,\r\n    getSimilar,\r\n    searchArtist,\r\n    addToFavorites,\r\n    clearArtist,\r\n    deleteFromFavorites\r\n};\r\n","import React, { Component }  from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport ACTIONS from \"../actions/index\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Favorite from '@material-ui/icons/Favorite';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport 'typeface-roboto';\r\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'start',\r\n        marginTop: 20\r\n    },\r\n    card: {\r\n        margin: '10px 5px',\r\n        [theme.breakpoints.down('sm')]: {\r\n            width: 'calc(50% - 10px)',\r\n        },\r\n        [theme.breakpoints.up('md')]: {\r\n            width: 'calc(33.3% - 10px)'\r\n        },\r\n        [theme.breakpoints.up('lg')]: {\r\n            width: 'calc(25% - 20px)',\r\n            margin: '10px 10px'\r\n        },\r\n    },\r\n    media: {\r\n        height: 0,\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    actions: {\r\n        display: 'flex',\r\n    },\r\n    links: {\r\n        color: 'grey',\r\n        textDecoration: 'none',\r\n        marginRight: 5\r\n    },\r\n    header: {\r\n        padding: 5\r\n    },\r\n    h: {\r\n        color: 'grey'\r\n    }\r\n});\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n      useNextVariants: true,\r\n  },\r\n});\r\n\r\nclass TopArtists extends Component {\r\n    componentDidMount () {\r\n        this.props.getTopArtists();\r\n    }\r\n    render () {\r\n        const { classes, topArtists, getSimilar, addToFavorites, deleteFromFavorites, favorites } = this.props;\r\n        return (\r\n            <>\r\n                <MuiThemeProvider theme={theme}>\r\n                    <Typography  className={classes.h} component=\"h2\" variant=\"h2\">\r\n                      Popular rigth now on Last.fm in Ukraine\r\n                    </Typography>\r\n                </MuiThemeProvider>\r\n                <div className={classes.root}>\r\n                    {topArtists.map((item, id) => {\r\n                        const i = item.image[4];\r\n                        const val = Object.values(i)[0];\r\n                        const isInFavorites = favorites.find(i => i.name === item.name);\r\n                        return  (\r\n                            <Card key={id} xs={4} className={classes.card}>\r\n                                <CardHeader\r\n                                    className={classes.header}\r\n                                    action={\r\n                                        <CardActions className={classes.actions} disableActionSpacing>\r\n                                            <Link className={classes.links} to={`/artist/${item.name.toLowerCase()}`}>{item.name}</Link>\r\n                                                {isInFavorites\r\n                                                    ?\r\n                                                        <IconButton className={classes.icons} aria-label=\"Delete from favorites\"\r\n                                                                    onClick={() => deleteFromFavorites(item.name)}>\r\n                                                            <Favorite  color='error' />\r\n                                                        </IconButton>\r\n                                                    :\r\n                                                      <IconButton className={classes.icons} aria-label=\"Add from favorites\"\r\n                                                                  onClick={() => {\r\n                                                                      addToFavorites(item.name);\r\n                                                                      getSimilar(item.name);\r\n                                                                  }}>\r\n                                                          <Favorite color='disabled'/>\r\n                                                      </IconButton>\r\n                                                }\r\n                                        </CardActions>\r\n                                    }\r\n                                />\r\n                                <Link to={`/artist/${item.name.toLowerCase()}`}>\r\n                                    <CardMedia\r\n                                      className={classes.media}\r\n                                      image={val}\r\n                                      title={item.name}\r\n                                    />\r\n                                </Link>\r\n                      </Card>\r\n                    )\r\n                })}\r\n            </div>\r\n        </>\r\n      )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        topArtists: state.topArtists,\r\n        favorites: state.favorites\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getTopArtists: () => dispatch(ACTIONS.getTopArtists()),\r\n    addToFavorites: (id) => dispatch(ACTIONS.addToFavorites(id)),\r\n    deleteFromFavorites: name => dispatch(ACTIONS.deleteFromFavorites(name)),\r\n    getSimilar: name => dispatch(ACTIONS.getSimilar(name))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(TopArtists));\r\n","import React, { Component }  from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Favorite from '@material-ui/icons/Favorite';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport 'typeface-roboto';\r\nimport ACTIONS from '../actions/';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: 360,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    inline: {\r\n        display: 'inline',\r\n        textDecoration: 'none'\r\n    },\r\n    listItem: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        borderBottom: '1px solid #ececec'\r\n    }\r\n});\r\n\r\nclass Similar extends Component {\r\n    render () {\r\n        const { classes, similar, getSimilar, addToFavorites, deleteFromFavorites, favorites } = this.props;\r\n        return(\r\n            <List className={classes.root}>\r\n                {similar.map((item, id) => {\r\n                    const i = item.image[4];\r\n                    const val = Object.values(i)[0];\r\n                    const isInFavorites = favorites.find(i => i.name === item.name);\r\n                    return (\r\n                        <ListItem className={classes.listItem} key={id} alignItems=\"flex-start\">\r\n                            <ListItemAvatar>\r\n                                <Avatar alt={item.name} src={val} />\r\n                            </ListItemAvatar>\r\n                            <ListItemText\r\n                                secondary={\r\n                                    <Link className={classes.inline} to={`/artist/${item.name.toLowerCase()}`}>\r\n                                        <Typography component=\"span\" className={classes.inline} color=\"textPrimary\">\r\n                                            {item.name}\r\n                                        </Typography>\r\n                                    </Link>\r\n                                }\r\n                            />\r\n                            {/*unfinished*/false && isInFavorites\r\n                                ?\r\n                                    <IconButton className={classes.icons} aria-label=\"Delete from favorites\"\r\n                                                onClick={() => deleteFromFavorites(item.name)}>\r\n                                        <Favorite color='error' />\r\n                                    </IconButton>\r\n                                :\r\n                                    <IconButton className={classes.icons} aria-label=\"Add from favorites\"\r\n                                                onClick={() => {\r\n                                                    addToFavorites(item.name);\r\n                                                    getSimilar(item.name) }}>\r\n                                        <Favorite color='disabled'/>\r\n                                    </IconButton>\r\n                                }\r\n                        </ListItem>\r\n                    )\r\n                })}\r\n            </List>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        favorites: state.favorites\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    addToFavorites: (id) => dispatch(ACTIONS.addToFavorites(id)),\r\n    deleteFromFavorites: (name) => dispatch(ACTIONS.deleteFromFavorites(name)),\r\n    getSimilar: name => dispatch(ACTIONS.getSimilar(name)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Similar))\r\n","import React, { Component }  from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Similar from './SimilarArtists';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Favorite from '@material-ui/icons/Favorite';\r\nimport red from '@material-ui/core/colors/red'\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\r\nimport 'typeface-roboto';\r\nimport ACTIONS from '../actions/';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'start',\r\n        marginTop: 15\r\n    },\r\n    card: {\r\n        margin: '10px 5px',\r\n        [theme.breakpoints.down('sm')]: {\r\n            width: 'calc(50% - 10px)',\r\n        },\r\n        [theme.breakpoints.up('md')]: {\r\n            width: 'calc(33.3% - 10px)'\r\n        },\r\n        [theme.breakpoints.up('lg')]: {\r\n            width: 'calc(25% - 20px)',\r\n            margin: '10px 10px'\r\n        }\r\n    },\r\n    media: {\r\n        height: 0,\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    actions: {\r\n        display: 'flex',\r\n    },\r\n    avatar: {\r\n        backgroundColor: red[500],\r\n    },\r\n    h: {\r\n        color: 'grey',\r\n        margin: 10,\r\n        textAlign: 'center'\r\n    }\r\n});\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n      useNextVariants: true,\r\n  }\r\n});\r\n\r\nclass Favorites extends Component {\r\n    render () {\r\n        const { classes, favorites, deleteFromFavorites } = this.props;\r\n        return(\r\n            <>\r\n                {favorites.length > 0\r\n                    ?\r\n                    <>\r\n                        <MuiThemeProvider theme={theme}>\r\n                            <Typography className={classes.h} component=\"h2\" variant=\"h2\">\r\n                                List of your favorites\r\n                            </Typography>\r\n                        </MuiThemeProvider>\r\n                        <div className={classes.root}>\r\n                            {favorites.map((item, id) => {\r\n                                const i = item.image[4];\r\n                                const val = Object.values(i)[0];\r\n                                return (\r\n                                    <Card key={id} className={classes.card}>\r\n                                        <CardHeader\r\n                                            avatar={\r\n                                                <Avatar aria-label=\"Recipe\" className={classes.avatar}>\r\n                                                    {item.name[0]}\r\n                                                </Avatar>\r\n                                            }\r\n                                            action={\r\n                                                <IconButton aria-label=\"Delete from favorites\"\r\n                                                            onClick={() => deleteFromFavorites(item.name)}>\r\n                                                    <Favorite color='error'/>\r\n                                                </IconButton>\r\n                                            }\r\n                                            title={item.name}\r\n                                            subheader={`Listeners: ${item.listeners}`}\r\n                                        />\r\n                                        <Link to={`/artist/${item.name.toLowerCase()}`}>\r\n                                            <CardMedia\r\n                                                className={classes.media}\r\n                                                image={val}\r\n                                                title={item.name}\r\n                                            />\r\n                                        </Link>\r\n                                        <Typography className={classes.h} variant=\"subtitle1\">\r\n                                            Similar artists\r\n                                        </Typography>\r\n                                        <Similar similar={item.similarArtists}/>\r\n                                    </Card>)\r\n                            })}\r\n                        </div>\r\n                    </>\r\n                    :\r\n                    <MuiThemeProvider theme={theme}>\r\n                        <Typography className={classes.h} component=\"h2\" variant=\"h2\">\r\n                            No favorites yet\r\n                        </Typography>\r\n                    </MuiThemeProvider>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        favorites: state.favorites\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    addToFavorites: (id) => dispatch(ACTIONS.addToFavorites(id)),\r\n    deleteFromFavorites: (name) => dispatch(ACTIONS.deleteFromFavorites(name)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Favorites))\r\n","import React, { Component }  from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\r\nimport Favorite from '@material-ui/icons/Favorite';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport 'typeface-roboto';\r\nimport ACTIONS from '../actions/';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        overflow: 'hidden',\r\n    },\r\n    paper: {\r\n        maxWidth: 400,\r\n        margin: `${theme.spacing.unit}px auto`,\r\n        padding: theme.spacing.unit * 2,\r\n    },\r\n    h: {\r\n        color: 'grey',\r\n        marginBottom: 15\r\n    },\r\n    header: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'baseline'\r\n    }\r\n});\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n      useNextVariants: true,\r\n  }\r\n});\r\n\r\nclass Artist extends Component {\r\n  componentDidMount () {\r\n      this.props.getInfo(this.props.match.params.artist);\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n      if (this.props.match.params.artist !== prevProps.match.params.artist) {\r\n        this.props.getInfo(this.props.match.params.artist);\r\n      }\r\n  }\r\n  render () {\r\n        const { artistInfo, classes, favorites, deleteFromFavorites, addToFavorites } = this.props;\r\n        let isInFavorites, bio;\r\n        if(artistInfo[0] !== undefined) {\r\n            isInFavorites = favorites.find(i => i.name == artistInfo[0].name);\r\n            bio = artistInfo[0].bio.content.substr(0, artistInfo[0].bio.content.indexOf('<a'));\r\n        }\r\n        return (\r\n            <>\r\n                {artistInfo[0] !== undefined &&\r\n                    <div className={classes.root}>\r\n                        <MuiThemeProvider theme={theme}>\r\n                            <div className={classes.header}>\r\n                                <Typography className={classes.h} component=\"h3\" variant=\"h2\">\r\n                                    {artistInfo[0].name}\r\n                                </Typography>\r\n                                {isInFavorites\r\n                                    ?\r\n                                        <IconButton className={classes.icons} aria-label=\"Delete from favorites\"\r\n                                                    onClick={() => deleteFromFavorites(artistInfo[0].name)}>\r\n                                            <Favorite color='error' />\r\n                                        </IconButton>\r\n                                    :\r\n                                        <IconButton className={classes.icons} aria-label=\"Add from favorites\"\r\n                                                    onClick={() => addToFavorites(artistInfo[0].name)}>\r\n                                            <Favorite color='disabled'/>\r\n                                        </IconButton>\r\n                                }\r\n                            </div>\r\n                        </MuiThemeProvider>\r\n                        <Typography className={classes.h} variant=\"subtitle1\" gutterBottom>\r\n                            {`Listeners: ${artistInfo[0].stats.listeners}`}\r\n                        </Typography>\r\n                        <Typography variant=\"body1\" gutterBottom>\r\n                            {bio}\r\n                        </Typography>\r\n                    </div>\r\n                }\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        artistInfo: state.artistInfo,\r\n        favorites: state.favorites\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getInfo: (artist) => dispatch(ACTIONS.getInfo(artist)),\r\n    addToFavorites: (name) => dispatch(ACTIONS.addToFavorites(name)),\r\n    deleteFromFavorites: (name) => dispatch(ACTIONS.deleteFromFavorites(name))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Artist));\r\n","import React, { Component }  from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport match from 'autosuggest-highlight/match';\r\nimport parse from 'autosuggest-highlight/parse';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ACTIONS from '../actions/';\r\n\r\nfunction renderInputComponent(inputProps) {\r\n    const { classes, inputRef = () => {}, ref, ...other } = inputProps;\r\n    return (\r\n        <TextField\r\n            fullWidth\r\n            InputProps={{\r\n                inputRef: node => {\r\n                ref(node);\r\n                inputRef(node);\r\n                },\r\n                classes: {\r\n                    input: classes.input,\r\n                },\r\n            }}\r\n            {...other}\r\n        />\r\n    );\r\n}\r\n\r\nconst renderSuggestion = (suggestion, { query, isHighlighted }) => {\r\n    suggestion.label = suggestion.name;\r\n    const matches = match(suggestion.label, query);\r\n    const parts = parse(suggestion.label, matches);\r\n\r\n    return (<MenuItem selected={isHighlighted} component=\"div\">\r\n              {parts.map((part, index) =>\r\n                         part.highlight ? (\r\n                             <span key={String(index)} style={{ fontWeight: 500 }}>\r\n                                 {part.text}\r\n                             </span>\r\n                         ) : (\r\n                             <strong key={String(index)} style={{ fontWeight: 300 }}>\r\n                                 {part.text}\r\n                             </strong>\r\n                         ),\r\n                        )}\r\n            </MenuItem>);\r\n};\r\n\r\nfunction getSuggestionValue(suggestion) {\r\n    return suggestion.label;\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        height: 40,\r\n        width: '80%',\r\n        flexGrow: 1,\r\n        position: 'absolute'\r\n    },\r\n    container: {\r\n        position: 'relative',\r\n    },\r\n    suggestionsContainerOpen: {\r\n        position: 'absolute',\r\n        height: 240,\r\n        overflowY: 'scroll',\r\n        zIndex: 1,\r\n        marginTop: theme.spacing.unit,\r\n        left: 0,\r\n        right: 0,\r\n    },\r\n    suggestion: {\r\n        display: 'block',\r\n    },\r\n    suggestionsList: {\r\n        margin: 0,\r\n        padding: 0,\r\n        listStyleType: 'none',\r\n    },\r\n    divider: {\r\n        height: theme.spacing.unit * 2,\r\n    }\r\n});\r\n\r\nclass IntegrationAutosuggest extends React.Component {\r\n    state = {\r\n        single: '',\r\n        popper: '',\r\n    }\r\n    handleSuggestionsFetchRequested = ({ value }) => {}\r\n    handleSuggestionsClearRequested = () => {}\r\n    handleChange = name => (event, { newValue }) => {\r\n    if (event.type === 'change') {\r\n        this.props.onChange(newValue);\r\n    }\r\n    this.setState({\r\n        [name]: newValue,\r\n    })\r\n  }\r\n  render() {\r\n        const { classes, suggestions, history, clearArtist } = this.props;\r\n        const autosuggestProps = {\r\n            renderInputComponent,\r\n            suggestions: suggestions,\r\n            onSuggestionsFetchRequested: this.handleSuggestionsFetchRequested,\r\n            onSuggestionsClearRequested: this.handleSuggestionsClearRequested,\r\n            getSuggestionValue,\r\n            renderSuggestion,\r\n            onSuggestionSelected: ((e, {suggestionValue}) => {\r\n                history.push('/artist/' + suggestionValue);\r\n                clearArtist();\r\n            })\r\n        };\r\n        return (\r\n            <div className={classes.root}>\r\n                <Autosuggest\r\n                {...autosuggestProps}\r\n                inputProps={{\r\n                    classes,\r\n                    placeholder: 'Search an artist',\r\n                    value: this.state.single,\r\n                    onChange: this.handleChange('single'),\r\n                }}\r\n                theme={{\r\n                    container: classes.container,\r\n                    suggestionsContainerOpen: classes.suggestionsContainerOpen,\r\n                    suggestionsList: classes.suggestionsList,\r\n                    suggestion: classes.suggestion,\r\n                }}\r\n                renderSuggestionsContainer={options => (\r\n                <Paper {...options.containerProps} square>\r\n                    {options.children}\r\n                </Paper>\r\n                )}\r\n                />\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst TheSupperAS =  withStyles(styles)(withRouter(IntegrationAutosuggest));\r\n\r\nclass SearchAutocomplete extends Component {\r\n    render () {\r\n        const { resultOfSearching, searchArtist, clearArtist } = this.props;\r\n        return (\r\n            <TheSupperAS\r\n                onChange={(name) => searchArtist(name)}\r\n                suggestions={resultOfSearching}\r\n                clearArtist={clearArtist}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        resultOfSearching: state.resultOfSearching\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    searchArtist: (artist) => dispatch(ACTIONS.searchArtist(artist)),\r\n    clearArtist: () => dispatch(ACTIONS.clearArtist())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchAutocomplete);\r\n","import React  from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Favorite from '@material-ui/icons/Favorite';\r\nimport Home from '@material-ui/icons/Home';\r\nimport TopArtists from '../containers/TopArtists';\r\nimport Favorites from '../containers/Favorites';\r\nimport Artist from '../containers/Artist';\r\nimport SearchAutocomplete from '../containers/SearchAutocomplete';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        overflow: 'hidden',\r\n        marginBottom: 30\r\n    },\r\n    paper: {\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    }\r\n});\r\n\r\nconst App = (props) => {\r\n    const { classes } = props;\r\n        return(\r\n        <Router>\r\n            <div>\r\n                <div className={classes.root}>\r\n                    <Grid container spacing={24}>\r\n                        <Grid item xs={1}>\r\n                            <Link to='/'>\r\n                                <Home color='primary' />\r\n                            </Link>\r\n                        </Grid>\r\n                        <Grid item xs={1}>\r\n                            <Link to='/favorites/all'>\r\n                                <Favorite color=\"error\" />\r\n                            </Link>\r\n                        </Grid>\r\n                        <Grid item xs={9}>\r\n                            <SearchAutocomplete />\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n                <Route exact path=\"/\" component={TopArtists} />\r\n                <Route exact path=\"/favorites/all\" component={Favorites} />\r\n                <Route exact path='/artist/:artist' component={Artist} />\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(App);\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport store from './store';\r\nimport App from './component/App';\r\n\r\nconst target = document.querySelector('#root')\r\n\r\nrender(\r\n    <Provider store={store()}>\r\n        <BrowserRouter>\r\n            <Route path=\"/\" component={App} />\r\n        </BrowserRouter>\r\n    </Provider>,\r\n    target\r\n)\r\n"],"sourceRoot":""}